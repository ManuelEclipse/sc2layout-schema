<map>

    <frameClass name="CTextFormatFrame" parent="CFrame">
        <property name="FormatText" valueType="Text" readonly="false">
            <label>Pattern in which text should be formatted. i.e. `%0% / %1%`.</label>
        </property>
        <property name="ReplacedName" table="true" valueType="Text" readonly="false">
            <label>Name of tokens. If not set, token will be in form of a index/number, i.e. `0` for first element.</label>
        </property>
        <property name="Replacement" table="true" valueType="Text" readonly="false">
            <label>List of values for replacement.</label>
        </property>
        <property name="RequiredReplacements" valueType="Uint32" readonly="false">
            <label>Number of replacements required for assembling the text, otherwise the `Text` property will be left blank.</label>
        </property>
        <property name="Text" valueType="String" readonly="true">
            <label>Resulting text.</label>
        </property>
    </frameClass>

    <frameType name="TextFormatFrame" classType="CTextFormatFrame" blizzOnly="false">
        <label>Assembles text from a list of tokens, and formats it according to specified pattern.</label>
        <documentation>
            <![CDATA[
            Utility frame - doesn't display anything by itself. Its purpose is to assemble a text, from a list of tokens provided in `Replacement` list, using a pattern set in `FormatText`.

            Assembled text is stored in a `Text` property (read-only). Which can be bound to property of another frame, such as `Text` in `Label`.

            ### Example

            ```xml
            <Frame type="TextFormatFrame" name="ShieldsText">
                <Anchor relative="$parent"/>
                <FormatText val="%0% / %1%"/>
                <Replacement val="{$parent/HealthValues/@Shields}" index="0"/>
                <Replacement val="{$parent/HealthValues/@MaxShields}" index="1"/>
            </Frame>
            <Frame type="Label" name="FenixCurrentShields">
                <Text val="{$parent/ShieldsText/@Text}"/>
            </Frame>
            ```
            ]]>
        </documentation>
    </frameType>

</map>
